/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var Controller;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/bech32/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/bech32/dist/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n\n\n//# sourceURL=webpack://Controller/./node_modules/bech32/dist/index.js?");

/***/ }),

/***/ "./src/controller.js":
/*!***************************!*\
  !*** ./src/controller.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   b32: () => (/* binding */ b32),\n/* harmony export */   buyerDepositADA: () => (/* binding */ buyerDepositADA),\n/* harmony export */   buyerDepositUSD: () => (/* binding */ buyerDepositUSD),\n/* harmony export */   buyerWithdrawUSD: () => (/* binding */ buyerWithdrawUSD),\n/* harmony export */   createContract: () => (/* binding */ createContract),\n/* harmony export */   initialize: () => (/* binding */ initialize),\n/* harmony export */   makeContract: () => (/* binding */ makeContract),\n/* harmony export */   releaseFunds: () => (/* binding */ releaseFunds),\n/* harmony export */   sellerDepositUSD: () => (/* binding */ sellerDepositUSD),\n/* harmony export */   sellerWithdrawADA: () => (/* binding */ sellerWithdrawADA),\n/* harmony export */   sellerWithdrawUSD: () => (/* binding */ sellerWithdrawUSD)\n/* harmony export */ });\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bech32 */ \"./node_modules/bech32/dist/index.js\");\n/* Example of Using Marlowe Runtime with a CIP30 Wallet */\n\n\n\n\n\n// Use a Bech32 library for converting address formats.\n\n;\n\nconst b32 = bech32__WEBPACK_IMPORTED_MODULE_0__.bech32\n\n\n// Connection to the CIP30 wallet.\nvar nami = null\n\n// Address of the depositor.\nvar address = null\n\n// Identifier for the contract.\nvar contractId = null\n\n// URL for Marlowe Runtime's /contracts endpoint.\nvar contractUrl = null\n\n// URL for Marlowe Runtime's /contract/*/transactions endpoint.\nvar transactionUrl = null\n\n// The JSON for the Marlowe contract.\nvar contract = {}\n\n// Poll every five seconds.\nconst delay = 5000\n\n// One ada is one million lovelace.\nconst ada = 1000000\n\n\n/**\n * Set the wallet's address in the UI.\n * @param [String] a The hexadecimal bytes for the address.\n */\nfunction setAddress(a) {\n  const bytes = []\n  for (let c = 0; c < a.length; c += 2)\n    bytes.push(parseInt(a.substr(c, 2), 16))\n  address = bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.encode(\"addr_test\", bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.toWords(bytes), 1000)\n  const display = address.substr(0, 20) + \"...\" + address.substr(address.length - 15)\n  uiAddress.innerHTML = \"<a href='https://preprod.cardanoscan.io/address/\" + a + \"' target='marlowe'>\" + address + \"</a>\"\n  // uiAddress.innerHTML = \"<a href='https://preprod.cardanoscan.io/address/\" + a + \"' target='marlowe'>\" + display + \"</a>\"\n}\n\n/**\n * Set the contract ID in the UI.\n * @param [String] c The contract ID.\n */\nfunction setContract(c) {\n  contractId = c\n  uiContractId.innerHTML = \"<a href='https://preprod.marlowescan.com/contractView?tab=info&contractId=\" + contractId.replace(\"#\", \"%23\") + \"' target='marlowe'>\" + contractId + \"</a>\"\n}\n\n\n/**\n * Set a link to a transaction in the UI.\n * @param [Element] element The UI element for the transaction.\n * @param [String]  tx      The transaction ID.\n */\nfunction setTx(element, tx) {\n  const display = tx.substr(0, 18) + \"...\" + tx.substr(tx.length - 18)\n  element.innerHTML = \"<a href='https://preprod.cardanoscan.io/transaction/\" + tx + \"?tab=utxo' target='marlowe'>\" + display + \"</a>\"\n}\n\n/**\n * Make the JSON for the Marlowe contract.\n */\nfunction makeContract() {\n  contract = {\n    \"when\": [\n      {\n        \"then\": {\n          \"when\": [\n            {\n              \"then\": {\n                \"token\": {\n                  \"token_name\": \"T-minus_USD\",\n                  \"currency_symbol\": \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\"\n                },\n                \"to\": {\n                  \"party\": {\n                    \"role_token\": \"Seller\"\n                  }\n                },\n                \"then\": {\n                  \"when\": [\n                    {\n                      \"then\": {\n                        \"token\": {\n                          \"token_name\": \"\",\n                          \"currency_symbol\": \"\"\n                        },\n                        \"to\": {\n                          \"party\": {\n                            \"role_token\": \"Seller\"\n                          }\n                        },\n                        \"then\": {\n                          \"token\": {\n                            \"token_name\": \"T-minus_USD\",\n                            \"currency_symbol\": \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\"\n                          },\n                          \"to\": {\n                            \"party\": {\n                              \"role_token\": \"Buyer\"\n                            }\n                          },\n                          \"then\": \"close\",\n                          \"pay\": 3000,\n                          \"from_account\": {\n                            \"role_token\": \"Seller\"\n                          }\n                        },\n                        \"pay\": 10000000000,\n                        \"from_account\": {\n                          \"role_token\": \"Buyer\"\n                        }\n                      },\n                      \"case\": {\n                        \"party\": {\n                          \"role_token\": \"Buyer\"\n                        },\n                        \"of_token\": {\n                          \"token_name\": \"\",\n                          \"currency_symbol\": \"\"\n                        },\n                        \"into_account\": {\n                          \"role_token\": \"Buyer\"\n                        },\n                        \"deposits\": 10000000000\n                      }\n                    }\n                  ],\n                  \"timeout_continuation\": {\n                    \"token\": {\n                      \"token_name\": \"T-minus_USD\",\n                      \"currency_symbol\": \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\"\n                    },\n                    \"to\": {\n                      \"party\": {\n                        \"role_token\": \"Seller\"\n                      }\n                    },\n                    \"then\": \"close\",\n                    \"pay\": 3000,\n                    \"from_account\": {\n                      \"role_token\": \"Seller\"\n                    }\n                  },\n                  \"timeout\": Date.parse(uiReleaseTime.value)\n                },\n                \"pay\": 200,\n                \"from_account\": {\n                  \"role_token\": \"Buyer\"\n                }\n              },\n              \"case\": {\n                \"party\": {\n                  \"role_token\": \"Buyer\"\n                },\n                \"of_token\": {\n                  \"token_name\": \"T-minus_USD\",\n                  \"currency_symbol\": \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\"\n                },\n                \"into_account\": {\n                  \"role_token\": \"Buyer\"\n                },\n                \"deposits\": 200\n              }\n            }\n          ],\n          \"timeout_continuation\": {\n            \"token\": {\n              \"token_name\": \"T-minus_USD\",\n              \"currency_symbol\": \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\"\n            },\n            \"to\": {\n              \"party\": {\n                \"role_token\": \"Seller\"\n              }\n            },\n            \"then\": \"close\",\n            \"pay\": 3000,\n            \"from_account\": {\n              \"role_token\": \"Seller\"\n            }\n          },\n          \"timeout\": Date.parse(uiBuyerDepositTime.value)\n        },\n        \"case\": {\n          \"party\": {\n            \"role_token\": \"Seller\"\n          },\n          \"of_token\": {\n            \"token_name\": \"T-minus_USD\",\n            \"currency_symbol\": \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\"\n          },\n          \"into_account\": {\n            \"role_token\": \"Seller\"\n          },\n          \"deposits\": 3000\n        }\n      }\n    ],\n    \"timeout_continuation\": \"close\",\n    \"timeout\": Date.parse(uiSellerDepositTime.value)\n  }\n  console.log({contract : contract})\n  uiContract.replaceChildren(window.renderjson.set_show_to_level(10)(contract))\n  // uiContract.innerText = JSON.stringify(contract)\n}\n\n/**\n * Perform an operation that requires blocking the UI.\n */\nfunction waitCursor() {\n  document.body.style.cursor = \"wait\"\n  uiCreate.style.cursor = \"wait\"\n  uiSellerDepositU.style.cursor = \"wait\"\n  uiBuyerDepositU.style.cursor = \"wait\"\n  uiSellerWithdrawU.style.cursor = \"wait\"\n  uiBuyerDepositA.style.cursor = \"wait\"\n  uiSellerWithdrawA.style.cursor = \"wait\"\n  uiBuyerWithdrawU.style.cursor = \"wait\"\n  \n  uiMessage.innerText = \"Working . . .\"\n}\n\n/**\n * Report a result and unblock the UI.\n */\nfunction report(message) {\n  document.body.style.cursor = \"default\"\n  uiCreate.style.cursor = \"default\"\n  uiSellerDepositU.style.cursor = \"default\"\n  uiBuyerDepositU.style.cursor = \"default\"\n  uiSellerWithdrawU.style.cursor = \"default\"\n  uiBuyerDepositA.style.cursor = \"default\"\n  uiSellerWithdrawA.style.cursor = \"default\"\n  uiBuyerWithdrawU.style.cursor = \"default\"\n  status(message)\n}\n\n/**\n * Show a status message in the UI.\n * @param [String] message The message.\n */\nfunction status(message) {\n  uiMessage.innerText = message\n}\n\n/**\n * Build a Marlowe transaction.\n * @param [String]   operation The name of the operation being performed.\n * @param [Object]   req       The HTTP request.\n * @param [String]   url       The endpoint's URL.\n * @param [String]   accept    The \"accept\" HTTP header.\n * @param [Function] followup  Actions to perform after the transaction is built.\n */\nasync function buildTransaction(operation, req, url, accept, followup) {\n  waitCursor()\n  const xhttp = new XMLHttpRequest()\n  xhttp.onreadystatechange = function() {\n    if (this.readyState == 4) {\n      console.log({operation : operation, status : this.status, response : this.responseText})\n      if (this.status == 201) {\n        const res = JSON.parse(this.responseText)\n        followup(res)\n      } else {\n        report(\"Transaction building failed.\")\n      }\n    }\n  }\n  xhttp.open(\"POST\", url)\n  xhttp.setRequestHeader(\"Content-Type\", \"application/json\")\n  xhttp.setRequestHeader(\"Accept\", accept)\n  console.log(\"address: \"+address)\n  xhttp.setRequestHeader(\"X-Change-Address\", address)\n  console.log({operation : operation, request : req})\n  status(\"Building transaction.\")\n  console.log(JSON.stringify(req))\n  xhttp.send(JSON.stringify(req))\n}\n\n/**\n * Create the contract.\n */\n    // , roles : { Seller : uiSeller.value, Buyer : uiBuyer.value }\n\nasync function createContract() {\n  buildTransaction(\n    \"create\"\n  , {\n      version : \"v1\"\n    , contract : contract\n    , roles : { Seller: uiSeller.value, Buyer: uiBuyer.value }\n    , minUTxODeposit : 2 * ada\n    , metadata : {}\n    , tags : {}\n    }\n  , uiRuntime.value + \"/contracts\"\n  , \"application/vendor.iog.marlowe-runtime.contract-tx-json\"\n  , function(res) {\n      uiSeller.disabled = true\n      uiBuyer.disabled = true\n      uiSellerDepositU.disabled = true\n      uiBuyerDepositU.disabled = true\n      uiSellerWithdrawU.disabled = true\n      uiBuyerDepositA.disabled = true\n      uiSellerWithdrawA.disabled = true\n      uiBuyerWithdrawU.disabled = true\n      uiReleaseTime.disabled = true\n      // setContract(res.resource.contractId)\n\n      contractUrl = uiRuntime.value + \"/\" + res.links.contract\n      const followup = function() {\n        setTx(uiCreateTx, contractId.replace(/#.*$/, \"\"))\n      }\n      submitTransaction(res.resource.tx.cborHex, contractUrl, waitForConfirmation(contractUrl, followup))\n    }\n  )\n}\n\n/**\n * Apply inputs to the contract.\n */\nasync function applyInputs(operation, inputs, followup) {\n  contractUrl = uiRuntime.value + \"/\" + uiContractId.value\n  contractUrl = \"http://66.42.38.116:3780/contracts/5ca7d3040694f2f8a4746e23ae22c7bb350a0d508a6d28c0c2ff436c9be01f98%231\"\n  console.log(contractUrl)\n  // yaml2json\n  buildTransaction(\n    operation\n  , {\n      version : \"v1\"\n    , inputs: inputs\n    , metadata : {}\n    , tags : {}\n    }\n  , contractUrl + \"/transactions\"\n  , \"application/vendor.iog.marlowe-runtime.apply-inputs-tx-json\"\n  , function(res) {\n      transactionUrl = uiRuntime.value + \"/\" + res.links.transaction\n      const tx = res.resource.transactionId\n      console.log(tx)\n      submitTransaction(res.resource.tx.cborHex, transactionUrl, waitForConfirmation(transactionUrl, followup(tx)))\n    }\n  )\n}\n\n/**\n * WITHDRAWALS\n */\nasync function Withdrawals(contractId, role, followup) {\n  buildTransaction(\n    \"withdrawals\"\n  , {\n      contractId : contractId\n    , role: role\n    }\n  , uiRuntime.value + \"/withdrawals\"\n  , \"application/vendor.iog.marlowe-runtime.withdraw-tx-json\"\n  , function(res) {\n      console.log(\"res: \",res)\n      transactionUrl = uiRuntime.value + \"/\" + res.links.withdrawal\n      console.log(\"transactionUrl: \",transactionUrl)\n      const tx = res.resource.withdrawalId\n      console.log(\"tx: \",tx)\n      submitTransaction(res.resource.tx.cborHex, transactionUrl, waitForConfirmation(transactionUrl, followup(tx)))\n    }\n  )\n}\n\nasync function sellerWithdrawUSD() {\n  // Seller NAMI\n  Withdrawals(\n    \"5ca7d3040694f2f8a4746e23ae22c7bb350a0d508a6d28c0c2ff436c9be01f98#1\"\n  , \"Seller\"\n  , function(tx) {\n      return function() {\n        setTx(uiSellerWithdrawUTx, tx)\n        uiSellerWithdrawU.disabled = true\n      }\n    }\n  )\n}\n\nasync function sellerWithdrawADA() {\n  // Seller NAMI\n  Withdrawals(\n    \"5ca7d3040694f2f8a4746e23ae22c7bb350a0d508a6d28c0c2ff436c9be01f98#1\"\n  , \"Seller\"\n  , function(tx) {\n      return function() {\n        setTx(uiSellerWithdrawATx, tx)\n        uiSellerWithdrawA.disabled = true\n      }\n    }\n  )\n}\n\nasync function buyerWithdrawUSD() {\n  // Buyer NAMI\n  Withdrawals(\n    \"5ca7d3040694f2f8a4746e23ae22c7bb350a0d508a6d28c0c2ff436c9be01f98#1\"\n  , \"Buyer\"\n  , function(tx) {\n      return function() {\n        setTx(uiBuyerWithdrawUTx, tx)\n        uiBuyerWithdrawU.disabled = true\n      }\n    }\n  )\n}\n\n/**\n * DEPOSIT\n */\nasync function sellerDepositUSD(amount) {\n  // Seller NAMI\n  applyInputs(\n    \"deposit\"\n  , [\n      {\n        input_from_party : { \"role_token\": \"Seller\" }\n      , into_account: { \"role_token\": \"Seller\" }\n      , of_token : { currency_symbol : \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\", token_name : \"T-minus_USD\" }\n      , that_deposits : amount\n      }\n    ]\n  , function(tx) {\n      return function() {\n        setTx(uiSellerDepositUTx, tx)\n        uiSellerDepositU.disabled = true\n      }\n    }\n  )\n}\n\nasync function buyerDepositUSD(amount) {\n  // Buyer NAMI\n  applyInputs(\n    \"deposit\"\n  , [\n      {\n        input_from_party : { \"role_token\": \"Buyer\" }\n      , into_account: { \"role_token\": \"Buyer\" }\n      , of_token : { currency_symbol : \"fe239e3c37753d02f32dcddd5cacbad2ee977b8c95e6ced7c2c10f55\", token_name : \"T-minus_USD\" }\n      , that_deposits : amount\n      }\n    ]\n  , function(tx) {\n      return function() {\n        setTx(uiBuyerDepositUTx, tx)\n        uiBuyerDepositU.disabled = true\n      }\n    }\n  )\n}\n\nasync function buyerDepositADA(amount) {\n  // Buyer NAMI\n  applyInputs(\n    \"deposit\"\n  , [\n      {\n        input_from_party : { \"role_token\": \"Buyer\" }\n      , into_account: { \"role_token\": \"Buyer\" }\n      , of_token : { currency_symbol : \"\", token_name : \"\" }\n      , that_deposits : amount\n      }\n    ]\n  , function(tx) {\n      return function() {\n        setTx(uiBuyerDepositATx, tx)\n        uiBuyerDepositA.disabled = true\n      }\n    }\n  )\n}\n\n\n/**\n * Release the funds from the contract.\n */\nasync function releaseFunds() {\n  applyInputs(\n    \"release\"\n  , []\n  , function(tx) {\n      return function() {\n        setTx(uiReleaseTx, tx)\n        uiRelease.disabled = true\n      }\n    }\n  )\n}\n\n\n/**\n * Submit a transaction.\n * @param [String]   cborHex The hexadecimal-encoded CBOR for the transaction.\n * @param [String]   url     The URL for the Marlowe Runtime endpoint for submitting the transaction.\n * @param [Function] wait    Action to be performed for waiting for the confirmation.\n */\nfunction submitTransaction(cborHex, url, wait) {\n  status(\"Signing transaction.\")\n  nami.signTx(cborHex, true).then(function(witness) {\n    const xhttp = new XMLHttpRequest()\n    xhttp.onreadystatechange = function() {\n      if (this.readyState == 4) {\n        console.log({operation : \"submit\", status : this.status, response : this.responseText})\n        if (this.status == 202) {\n          setTimeout(wait, delay)\n\t} else {\n          report(\"Transaction submission failed.\")\n        }\n      }\n    }\n    xhttp.open(\"PUT\", url)\n    xhttp.setRequestHeader(\"Content-Type\", \"application/json\")\n    const req = {\n      type : \"ShelleyTxWitness BabbageEra\"\n    , description : \"\"\n    , cborHex : witness\n    }\n    console.log({operation : \"submit\", request : req})\n    status(\"Submitting transaction.\")\n    xhttp.send(JSON.stringify(req))\n  }).catch(function(error) {\n    report(error)\n  })\n}\n\n\n/**\n * Wait for a transaction to be confirmed.\n */\nfunction waitForConfirmation(url, followup) {\n  return function() {\n    const xhttp = new XMLHttpRequest()\n    xhttp.onreadystatechange = function() {\n      if (this.readyState == 4) {\n        console.log({operation : \"wait\", status : this.status, response : this.responseText})\n        if (this.status == 200) {\n          const res = JSON.parse(this.responseText)\n          console.log(\"wait for res: \", res)\n          if (res.resource.status == \"confirmed\") {\n            setTimeout(followup, delay)\n            report(\"Transaction confirmed.\")\n          } else if (res.status == \"confirmed\") {\n            setTimeout(followup, delay)\n            report(\"Transaction confirmed.\")\n          } else if (res.resource.status == \"submitted\") {\n            setTimeout(waitForConfirmation(url, followup), delay)\n          } else if (res.status == \"submitted\") {\n            setTimeout(waitForConfirmation(url, followup), delay)\n  \t      } else {\n            report(\"Confirmation failed.\")\n          }\n        }\n      }\n    }\n    xhttp.open(\"GET\", url)\n    console.log({operation : \"wait\"})\n    status(\"Waiting for confirmation.\")\n    xhttp.send()\n  }\n}\n\n\n/**\n * Initialize the application.\n */\nasync function initialize() {\n\n  uiRuntime.value = \"http://66.42.38.116:3780\"\n\n  uiSeller.disabled = false\n  uiBuyer.disabled = false\n  uiSellerDepositU.disabled = false\n  uiBuyerDepositU.disabled = false\n  uiSellerWithdrawU.disabled = false\n  uiBuyerDepositA.disabled = false\n  uiSellerWithdrawA.disabled = false\n  uiBuyerWithdrawU.disabled = false\n  uiReleaseTime.disabled = false\n\n  if (uiContractId.value != \"\") {\n    uiCreate.disabled = true\n    // let uiSDU = \"25435370bdec4f2e9e16f5e8a7efd3553287eb21733764878814360edfd946cc\"\n    // let uiBDU = \"875582804a5ac31c82b4c1e8689dc466d1f236c158af7bc5fcc257a76e69744a\"\n    // let uiSWU = \"97a9015598953b57211b395dab116f4c18ad01a7a775634d90a922b11348875e\"\n    // let uiBDA = \"6b8589f4005cac5347a155354cef317aa3c35a98a8b8d34495d17a23856cccc5\"\n    // let uiSWA = \"38e9fb87e4c875cabe8c60367939d2e1db640c75a1fb642b1c5491140db6a45a\"\n    // let uiBWU = \"c8ee396d7c1502f106d9fa5681a31f493c296b7f356147436dc582ddde8eea39\"\n    let uiSDU = \"b09c06dee745850896613cc3dadaf94374035b82194843de03dd68a918e35734\"\n    let uiBDU = \"bc11f442a43890f885e17fc1df5204e0657e48fcc17f757a30a23f34c130e7ce\"\n    let uiSWU = \"\"\n    let uiBDA = \"1c45cb695d0f46e2bee9259f7381ba284680b01f01ae93b71ef8d987ab40e498\"\n    let uiSWA = \"\"\n    let uiBWU = \"e314b13d2fa515193aaeef5798824cea2a183462fe27e1af4a1ba181368734e4\"\n\n    uiCreateTx.innerHTML = \"<a href='https://preprod.marlowescan.com/contractView?tab=info&contractId=\" + uiContractId.value.replace(\"#\", \"%23\") + \"' target='marlowe'>\" + uiContractId.value + \"</a>\"\n\n    if (uiSDU != \"\")\n      uiSellerDepositU.disabled = true\n    uiSellerDepositUTx.innerHTML = \"<a href='https://preprod.marlowescan.com/contractView?tab=info&contractId=\" + uiContractId.value.replace(\"#\", \"%23\") + \"' target='marlowe'>\" + uiSDU + \"</a>\"\n\n    if (uiBDU != \"\")\n      uiBuyerDepositU.disabled = true\n    uiBuyerDepositUTx.innerHTML = \"<a href='https://preprod.marlowescan.com/contractView?tab=info&contractId=\" + uiContractId.value.replace(\"#\", \"%23\") + \"' target='marlowe'>\" + uiBDU + \"</a>\"\n\n    if (uiSWU != \"\")\n      uiSellerWithdrawU.disabled = true\n    uiSellerWithdrawUTx.innerHTML = \"<a href='https://preprod.cardanoscan.io/transaction/\" + uiSWU + \"' target='marlowe'>\" + uiSWU + \" (CS)</a><br><a href='\" + uiRuntime.value + \"/withdrawals/\" + uiSWU + \"' target='marlowe'>\" + uiSWU + \" (MB)</a>\"\n\n    if (uiBDA != \"\")\n      uiBuyerDepositA.disabled = true\n    uiBuyerDepositATx.innerHTML = \"<a href='https://preprod.marlowescan.com/contractView?tab=info&contractId=\" + uiContractId.value.replace(\"#\", \"%23\") + \"' target='marlowe'>\" + uiBDA + \"</a>\"\n\n    if (uiSWA != \"\")\n      uiSellerWithdrawA.disabled = true\n    uiSellerWithdrawATx.innerHTML = \"<a href='https://preprod.cardanoscan.io/transaction/\" + uiSWA + \"' target='marlowe'>\" + uiSWA + \" (CS)</a><br><a href='\" + uiRuntime.value + \"/withdrawals/\" + uiSWA + \"' target='marlowe'>\" + uiSWA + \" (MB)</a>\"\n\n    if (uiBWU != \"\")\n      uiBuyerWithdrawU.disabled = true\n    uiBuyerWithdrawUTx.innerHTML = \"<a href='https://preprod.cardanoscan.io/transaction/\" + uiBWU + \"' target='marlowe'>\" + uiBWU + \" (CS)</a><br><a href='\" + uiRuntime.value + \"/withdrawals/\" + uiBWU + \"' target='marlowe'>\" + uiBWU + \" (MB)</a>\"\n  }\n\n  const sellerDepositTime = new Date()\n  sellerDepositTime.setDate(sellerDepositTime.getDate() + 2)\n  uiSellerDepositTime.value = sellerDepositTime.toISOString()\n\n  const buyerDepositTime = new Date()\n  buyerDepositTime.setDate(buyerDepositTime.getDate() + 4)\n  uiBuyerDepositTime.value = buyerDepositTime.toISOString()\n\n  const releaseTime = new Date()\n  releaseTime.setDate(releaseTime.getDate() + 7)\n  uiReleaseTime.value = releaseTime.toISOString()\n\n  // Connect to the Nami wallet.\n  cardano.nami.enable().then(function(n) {\n    nami = n\n    nami.getChangeAddress().then(function(a) {\n      setAddress(a)\n      // uiBuyer.value = address\n      makeContract()\n    }).catch(function(error) {\n      report(error)\n    })\n  }).catch(function(error) {\n    report(error)\n  })\n\n}\n\n\n//# sourceURL=webpack://Controller/./src/controller.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/controller.js");
/******/ 	Controller = __webpack_exports__;
/******/ 	
/******/ })()
;